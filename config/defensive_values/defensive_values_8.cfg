echoln "[defensive_values_8.cfg] Start of defensive_values_8.cfg";



echoln "[defensive_values_8.cfg] {1} Fetching defensive convars 526 through 600";
incrementvar "sc_visualize_batches"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - color per batch
incrementvar "sc_mesh_backface_culling"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "sc_allow_write_depth_before_blend"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "sc_cache_envmap_lpv_lookup"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "lb_enable_shadow_casting"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Allow stationary/dynamic lights to cast shadows.
incrementvar "lb_enable_binning"                                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - SceneSystem/LightBinner/Enable Binning
incrementvar "lb_tile_pixels"                                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 8
incrementvar "lb_bin_slices"                                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 8192
incrementvar "lb_shadow_texture_width_override"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Override width of shadow atlas texture
incrementvar "lb_shadow_texture_height_override"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Override height of shadow atlas texture
incrementvar "lb_csm_cascade_size_override"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Override width/height of individual cascades in the CSM
incrementvar "lb_csm_receiver_plane_depth_bias"                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Shader depth bias applied to shadow receiver (Note this conflicts with renderstate depth bias, both now default to 0)
incrementvar "lb_csm_receiver_plane_depth_bias_transmissive_backface"       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.0001 - Depth bias applied to shadow receiver for transmissive backface geo (based on renderstate depthbias being 0)
incrementvar "lb_csm_draw_alpha_tested"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "lb_csm_draw_translucent"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "lb_csm_cross_fade_override"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Override CSM cross fade amount
incrementvar "lb_csm_distance_fade_override"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Override CSM distance fade
incrementvar "lb_csm_override_staticgeo_cascades"                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Override Cascades that will render static objects with lb_csm_override_staticgeo_cascades_value
incrementvar "lb_csm_override_staticgeo_cascades_value"                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - If lb_csm_override_staticgeo_cascades, override value used to determine which cascades render static objects
incrementvar "lb_sun_csm_size_cull_threshold_texels"                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 10 - Size, in texels, where we will cull an object in the shadowmap
incrementvar "lb_csm_override_bulb_radius"                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Override bulb radius for CSM
incrementvar "lb_dynamic_shadow_penumbra"                                   "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Adjust shadow penumbra based on light size
incrementvar "lb_dynamic_shadow_resolution"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true - Dynamically adjust shadow resolution
incrementvar "lb_dynamic_shadow_resolution_base"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1024 - Base resolution for dynamic shadowmap sizing.  Shadowmap size of a screen sized light
incrementvar "lb_dynamic_shadow_resolution_quantization"                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 64 - Quantization of dynamically computed shadow size
incrementvar "lb_dynamic_shadow_resolution_hysteresis"                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.33 - Update hysteresis for shadow size
incrementvar "lb_dynamic_shadow_resolution_delay"                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.8500000000000001 - Update delay for shadow size
incrementvar "lb_timesliced_shadows_dynamic_size"                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_grass_vertex_lighting"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "r_grass_alpha_test"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1
incrementvar "r_grass_start_fade"                                           "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3000
incrementvar "r_grass_end_fade"                                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3900
incrementvar "r_grass_density_mode"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1 - 0 = Density corresponds to blade existance, 1 = Density corresponds to blade height, 2 = Both 0 and 1
incrementvar "r_grass_quality"                                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3 - 0 = Off, 1 = Low, 2 = Med, 3 = high, 4 = ultra
incrementvar "r_grass_max_brightness_change"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 75
incrementvar "r_grass_allow_flattening"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "r_grass_parallel_load"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "r_lightmap_size"                                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 65536 - Maximum lightmap resolution.
incrementvar "r_lightmap_size_directional_irradiance"                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1 - Maximum lightmap resolution for directional_irradiance channel. -1 = use value of r_lightmap_size
incrementvar "sc_allow_precomputed_vismembers"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_world_wind_strength"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 40
incrementvar "r_world_wind_offset_speed"                                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.25,0.30000001192092896,0.20000000298023224
incrementvar "r_world_wind_frequency_grass"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.030000000000000002
incrementvar "r_world_wind_frequency_trees"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.003
incrementvar "r_world_wind_dir"                                             "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0.7070000171661377,0.7070000171661377,0
incrementvar "r_world_wind_smooth_time"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 2
incrementvar "r_world_frame_load_threshold_ms"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 10
incrementvar "r_particle_max_detail_level"                                  "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 3 - The maximum detail level of particle to create
incrementvar "particle_debug_creation_filter"                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 
incrementvar "r_particle_debug_filter"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; //  - Limit debug visualizations to substring match of effect name
incrementvar "r_particle_debug_randomseeds"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Use random seeds in debug
incrementvar "r_particle_max_size_cull"                                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1200 - Particle systems larger than this in every dimension skip culling to save CPU.  They will be drawn anyway.
incrementvar "r_particle_render_test"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - render particles 100 times and show perf
incrementvar "r_particle_min_timestep"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - A minimum on particle simulation time, particle simulation happening more frequently than this will lerp.
incrementvar "cl_particle_batch_mode"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1
incrementvar "cl_particle_fallback_multiplier"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Multiplier for falling back to cheaper effects under load.
incrementvar "cl_particle_fallback_base"                                    "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - Base for falling back to cheaper effects under load.
incrementvar "cl_particle_max_count"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0
incrementvar "cl_aggregate_particles"                                       "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "r_threaded_particles"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_particle_timescale"                                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 1
incrementvar "r_particle_debug_force_simulation"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 0 - -1 for all asleep, 1 for all awake
incrementvar "cl_particle_log_creates"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false - Print debug message every time a particle collection is created
incrementvar "cl_particle_sim_fallback_threshold_ms"                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 6 - Amount of simulation time that can elapse before new systems start falling back to cheaper versions
incrementvar "cl_particle_sim_fallback_base_multiplier"                     "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 5 - How aggressive the switch to fallbacks will be depending on how far over the cl_particle_sim_fallback_threshold_ms the sim time is.  Higher numbers are more aggressive.
incrementvar "r_particle_cables_cast_shadows"                               "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "particle_powsimd_random_range_exp"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_particle_max_texture_layers"                                "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1
incrementvar "r_particle_gpu_implicit"                                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // true
incrementvar "r_particle_force_material_binds"                              "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "panorama_debug_movies"                                        "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // false
incrementvar "panorama_movie_async_load_size_bytes"                         "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 20971520
incrementvar "panorama_movie_force_not_ready_behavior"                      "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // -1
incrementvar "panorama_console_max_history"                                 "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 100
incrementvar "panorama_console_max_autocomplete"                            "-340282356779733642748073463979561713663" "340282356779733642748073463979561713663" "0"; // 100



echoln "[defensive_values_8.cfg] End of defensive_values_8.cfg";